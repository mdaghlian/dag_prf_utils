#!/usr/bin/env python
#$ -j Y
#$ -cwd
#$ -V


import sys
import os
opj = os.path.join


import numpy as np

from dag_prf_utils.utils import dag_find_file_in_folder



def main(argv):
    '''
    ---------------------------
    Print the custom surfaces for a subject (in the fs custom folder)

    Args (optional):
        --sub               subject number
        --find 
        --exclude 
        # 
        -h          help
    
    Example:


    '''
    # Load the fitting settings, add in the new info
    # [1] Setup parameters:
    sub = None
    search_incl = []
    search_excl = []
    for i,arg in enumerate(argv):
        if '--sub' in arg:
            sub = f'sub-{argv[i+1]}'
        elif '--print_overlay' in arg:
            print_overlay = True

        elif '--find' in arg:
            do_search = True
            search_incl = argv[i+1]
            if ',' in search_incl:
                search_incl = search_incl.split(',')
            if not isinstance(search_incl, list):
                search_incl = [search_incl]
        elif '--exclude' in arg:
            search_excl = argv[i+1]
            if ',' in search_excl:
                search_excl = search_excl.split(',')
            if not isinstance(search_excl, list):
                search_excl = [search_excl]

        elif '-h' in arg:
            print(main.__doc__)
            sys.exit()

    # [3] Check the arguments
    if sub is None:
        raise ValueError('Subject number not specified')
    
    fs_dir=os.environ['SUBJECTS_DIR']
    print(f'Looking in {fs_dir}')
    custom_surf_dir = opj(fs_dir, sub, 'surf', 'custom')
    print(f'Looing in {custom_surf_dir}')
    
    # Find the surfaces
    surf_list = dag_find_file_in_folder(
        filt = search_incl,
        path=custom_surf_dir,
        exclude = search_excl + ['rh.', 'overlay', '.png'], # exclude right hemisphere in search to avoid duplicates
        recursive=True,
        return_msg=None
    )
    if surf_list is None: 
        print('No surfaces found')
        return

    if isinstance(surf_list, str):
        surf_list = [surf_list]
    surf_list = [surf.split('/')[-1] for surf in surf_list]
    surf_list = [surf.replace('lh.', '') for surf in surf_list]

    for i,surf in enumerate(surf_list):
        print(i, surf)


if __name__ == "__main__":
    main(sys.argv[1:])    