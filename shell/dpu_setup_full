#!/usr/bin/env bash

# specify the folder where dag_prf_utils is held
DPU_SETUP_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
DPU_SETUP_FILE="${DPU_SETUP_DIR}/dpu_setup"
DPU_REPO_DIR=$(dirname ${DPU_SETUP_DIR})
export DAG_UTILS=$DPU_REPO_DIR

# source helper functions

if [[ $1 == "setup" ]]; then

  echo "==================================================================================================="
  echo "                            SETUP SCRIPT FOR dag_prf_utils                              "
  echo "==================================================================================================="
  echo "Setting up ~/.bash_profile"
  # ignore permission changes in git
  git config core.fileMode false 2>/dev/null

  # make scripts executable
  chmod -R 2775 ${DPU_REPO_DIR}/bin 2>/dev/null
  chmod -R 2775 ${DPU_REPO_DIR}/shell 2>/dev/null

  # source call_bashhelper
  #source ${REPO_DIR}/bin/call_bashhelper

  if [ -f ~/.bash_profile ]; then
    search_for="source ${DPU_SETUP_FILE}"
    case `grep -Fx "${search_for}" ~/.bash_profile >/dev/null; echo $?` in
      0)
        # code if found
        # echo "Line already present"
        ;;
      1)
        # code if not found
        (
        echo 
        echo "# Inserted via the dag_prf_utils-repository"
        echo "source ${DPU_SETUP_FILE}"
        ) >> ~/.bash_profile
        ;;
      *)
        # code if an error occurred
        echo "ERROR: Could not complete setup.."
        ;;
    esac
  else
      (
      echo "# .bash_profile"
      echo "# Inserted via the dag_prf_utils-repository"
      echo "source ${DPU_SETUP_FILE}"
      ) >> ~/.bash_profile
  fi

  # activate conda environment
  ACTIVATE_CONDA=1
  cmd="mamba" # YOU MAY NEED TO REPLACE THIS WITH CONDA
  echo "using ${cmd}"

  if [[ ${ACTIVATE_CONDA} -eq 1 ]]; then

    echo
    echo "---------------------------------------------------------------------------------------------------"
    echo "Dealing with conda environment"

    env_name="dpu"
    if [[ -z `conda info --envs | grep ${env_name}` ]]; then
      ${cmd} env create --file ${REPO_DIR}/environment.yml --prefix=~/.conda/envs/${env_name}
      if [[ $? -ne 0 ]]; then
        echo "ERROR: conda install from environment.yml file did not complete"
        exit 1
      fi
    else
      echo "WARNING: conda environment \"${env_name}\" already exists. Edit \"env_name\" in setup file and rerun"
      exit 1
    fi
    conda activate ${env_name}
  fi
  

  # scipy get installed by pip again, so uninstall and let mamba/conda sort it out
  pip uninstall scipy -y
  ${cmd} install -c conda-forge scipy -y

fi



# If you have access to SGE, leave to SGE; otherwise change to e.g., LOCAL
export OMP_NUM_THREADS=1 
export MKL_NUM_THREADS=1
export OPENBLAS_NUM_THREADS=1

# Make executables available in environment
export PATH=${PATH}:${DPU_REPO_DIR}/bin
export PATH=${PATH}:${DPU_REPO_DIR}/shell
# make scripts executable
chmod -R 775 ${DPU_REPO_DIR}/bin
chmod -R 775 ${DPU_REPO_DIR}/shell